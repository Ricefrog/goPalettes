{"ast":null,"code":"var _jsxFileName = \"/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [fileUploaded, setFileUploaded] = useState(false);\n\n  const uploadImage = e => {\n    e.preventDefault();\n    console.log('Uploading image.');\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Accept': 'application/json'\n      },\n      body: formData\n    };\n    delete options.headers['Content-Type'];\n    fetch(API_URL + '/upload', options).then(response => {\n      console.log(response);\n\n      if (response.status === 200) {\n        setFileUploaded(true);\n      }\n    }).catch(error => {\n      console.log('Upload failed.');\n      console.error('Error:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"extraction-block\",\n    children: /*#__PURE__*/_jsxDEV(PaletteExtractForm, {\n      onSubmit: uploadImage,\n      selectedFile: selectedFile,\n      setSelectedFile: setSelectedFile,\n      fileUploaded: fileUploaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExtractionBlock, \"bHq1p3eWFKiLczmdzxvokrvdgwI=\");\n\n_c = ExtractionBlock;\n\nconst PaletteExtractForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => props.onSubmit(e),\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Upload.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => props.setSelectedFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload image!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DisplayPalette, {\n      display: props.fileUploaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = PaletteExtractForm;\n\nconst DisplayPalette = ({\n  display\n}) => {\n  _s2();\n\n  const [numCols, setNumCols] = useState(3);\n  const [numGo, setNumGo] = useState(4);\n  const [palette, setPalette] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [concurrent, setConcurrent] = useState(true);\n\n  if (!display) {\n    return null;\n  }\n\n  const getPalette = () => {\n    const urlToUse = `${API_URL}/extract/?colors=${numCols}&concurrent=${concurrent}`;\n    const options = {\n      method: 'GET'\n    };\n    setLoading(true);\n    fetch(urlToUse, options).then(response => response.json()).then(result => {\n      console.log('Returned:', result);\n      setPalette(result);\n      setLoading(false);\n    }).catch(error => {\n      console.log('Palette extraction failed.');\n      console.error('Error:', error);\n      setLoading(false);\n    });\n  };\n\n  const options = [];\n\n  for (let i = 3; i < 11; i++) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: i,\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this));\n  }\n\n  const blocks = [];\n\n  for (let i = 0; i < palette.length; i++) {\n    blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-itself\",\n        style: {\n          backgroundColor: palette[i].color\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-info\",\n        children: [palette[i].color, \": \", palette[i].frequency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-palette\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"extractNum\",\n        children: \"Colors to extract:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"extractNum\",\n        value: numCols,\n        onChange: e => setNumCols(e.target.value),\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"concurrent\",\n        name: \"concurrent\",\n        onClick: () => setConcurrent(true),\n        checked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"concurrent\",\n        children: \"Concurrent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"sequential\",\n        name: \"concurrent\",\n        onClick: () => setConcurrent(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"sequential\",\n        children: \"Sequential\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPalette,\n        children: \"Find palette!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this), concurrent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"goroutines\",\n        children: \"goroutines to use:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"goroutines\",\n        value: numGo,\n        onChange: e => setNumGo(e.target.value),\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-palette\",\n      children: blocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(DisplayPalette, \"jrEAW9XPy0i6VBR74GxsZjtAYpc=\");\n\n_c3 = DisplayPalette;\nexport default ExtractionBlock;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExtractionBlock\");\n$RefreshReg$(_c2, \"PaletteExtractForm\");\n$RefreshReg$(_c3, \"DisplayPalette\");","map":{"version":3,"sources":["/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js"],"names":["React","useState","API_URL","ExtractionBlock","selectedFile","setSelectedFile","undefined","fileUploaded","setFileUploaded","uploadImage","e","preventDefault","console","log","formData","FormData","append","options","method","headers","body","fetch","then","response","status","catch","error","PaletteExtractForm","props","onSubmit","target","files","DisplayPalette","display","numCols","setNumCols","numGo","setNumGo","palette","setPalette","loading","setLoading","concurrent","setConcurrent","getPalette","urlToUse","json","result","i","push","blocks","length","backgroundColor","color","frequency","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n\tconst [selectedFile, setSelectedFile] = useState(undefined);\n\tconst [fileUploaded, setFileUploaded] = useState(false);\n\n\tconst uploadImage = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('Uploading image.');\n\n\t\tconst formData = new FormData();\n\t\tformData.append('image', selectedFile);\n\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t}\n\t\tdelete options.headers['Content-Type'];\n\t\tfetch(API_URL+'/upload', options)\n\t\t.then(response => {\n\t\t\tconsole.log(response);\n\t\t\tif (response.status === 200) {\n\t\t\t\tsetFileUploaded(true);\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log('Upload failed.');\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"extraction-block\">\n\t\t\t<PaletteExtractForm \n\t\t\t\tonSubmit={uploadImage} \n\t\t\t\tselectedFile={selectedFile}\n\t\t\t\tsetSelectedFile={setSelectedFile}\n\t\t\t\tfileUploaded={fileUploaded}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst PaletteExtractForm = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<form \n\t\t\t\tonSubmit={(e) => props.onSubmit(e)}\n\t\t\t\tclassName=\"upload-form\"\n\t\t\t>\n\t\t\t\t<div>Upload.</div>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"file\" \n\t\t\t\t\tname=\"image\"\n\t\t\t\t\tonChange={(e) => props.setSelectedFile(e.target.files[0])}\n\t\t\t\t/>\n\t\t\t\t<button>\n\t\t\t\t\tUpload image!\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<DisplayPalette \n\t\t\t\tdisplay={props.fileUploaded}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst DisplayPalette = ({ display }) => {\n\tconst [numCols, setNumCols] = useState(3);\n\tconst [numGo, setNumGo] = useState(4);\n\tconst [palette, setPalette] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [concurrent, setConcurrent] = useState(true);\n\n\tif (!display) {\n\t\treturn null;\n\t}\n\n\tconst getPalette = () => {\n\t\tconst urlToUse = \n\t\t`${API_URL}/extract/?colors=${numCols}&concurrent=${concurrent}`;\n\n\t\tconst options = {\n\t\t\tmethod: 'GET',\n\t\t};\n\n\t\tsetLoading(true);\n\t\tfetch(urlToUse, options)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tconsole.log('Returned:', result);\n\t\t\t\tsetPalette(result);\n\t\t\t\tsetLoading(false);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('Palette extraction failed.');\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}\n\n\tconst options = [];\n\tfor (let i = 3; i < 11; i++) {\n\t\toptions.push(<option value={i} key={i}>{i}</option>);\n\t}\n\n\tconst blocks = [];\n\tfor (let i = 0; i < palette.length; i++) {\n\t\tblocks.push(\n\t\t\t<div\n\t\t\t\tclassName=\"color-block\" \n\t\t\t>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"color-itself\"\n\t\t\t\t\tstyle={{backgroundColor: palette[i].color}}\n\t\t\t\t\tkey={i}\n\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"color-info\"\n\t\t\t\t>\n\t\t\t\t\t{palette[i].color}: {palette[i].frequency}\n\t\t\t\t</div>\n\t\t\t</div>\n\t);\n\t}\n\n\treturn (\n\t\t<div className=\"find-palette\">\n\t\t\t<div>\n\t\t\t\t<label htmlFor=\"extractNum\">Colors to extract:</label>\n\t\t\t\t<select \n\t\t\t\t\tid=\"extractNum\"\n\t\t\t\t\tvalue={numCols}\n\t\t\t\t\tonChange={(e) => setNumCols(e.target.value)}\n\t\t\t\t>\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" id=\"concurrent\" name=\"concurrent\" \n\t\t\t\t\tonClick={() => setConcurrent(true)}\n\t\t\t\t\tchecked\n\t\t\t\t/>\n\t\t\t\t<label for=\"concurrent\">Concurrent</label>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" id=\"sequential\" name=\"concurrent\" \n\t\t\t\t\tonClick={() => setConcurrent(false)}\n\t\t\t\t/>\n\t\t\t\t<label for=\"sequential\">Sequential</label>\n\t\t\t\t<button onClick={getPalette}>\n\t\t\t\t\tFind palette!\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tconcurrent \n\t\t\t\t\t? <div>\n\t\t\t\t\t\t<label htmlFor=\"goroutines\">goroutines to use:</label>\n\t\t\t\t\t\t<select \n\t\t\t\t\t\t\tid=\"goroutines\"\n\t\t\t\t\t\t\tvalue={numGo}\n\t\t\t\t\t\t\tonChange={(e) => setNumGo(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: <></>\n\t\t\t}\n\t\t\t{loading \n\t\t\t\t? <div>Loading...</div>\n\t\t\t\t: <div className=\"display-palette\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tblocks\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default ExtractionBlock;\n"]},"metadata":{},"sourceType":"module"}