{"ast":null,"code":"var _jsxFileName = \"/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n  _s();\n\n  const [numCols, setNumCols] = useState(3);\n  const [selectedFile, setSelectedFile] = useState(undefined);\n\n  const submitForm = () => {\n    console.log('Uploading extract form.');\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    formData.append('numOfColors', numCols);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: formData\n    };\n    delete options.headers['Content-Type'];\n    fetch(API_URL + '/extract', options).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"extraction-block\",\n    children: [/*#__PURE__*/_jsxDEV(PaletteExtractForm, {\n      onSubmit: submitForm,\n      numCols: numCols,\n      setNumCols: setNumCols,\n      selectedFile: selectedFile,\n      setSelectedFile: setSelectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DisplayPalette, {\n      numCols: numCols\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExtractionBlock, \"dUHql7PsQyrV/FGztct4vKtyGsk=\");\n\n_c = ExtractionBlock;\n\nconst PaletteExtractForm = props => {\n  const options = [];\n\n  for (let i = 3; i < 11; i++) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: i,\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Extract a palette from a file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"extractNum\",\n      children: \"Colors to extract:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"extractNum\",\n      value: props.numCols,\n      onChange: e => props.setNumCols(e.target.value),\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: e => props.setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Find palette!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = PaletteExtractForm;\n\nconst DisplayPalette = ({\n  numOfCols\n}) => {\n  const blocks = [];\n\n  for (let i = 0; i < numOfCols; i++) {\n    blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"color \", i]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-palette\",\n    children: blocks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = DisplayPalette;\nexport default ExtractionBlock;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExtractionBlock\");\n$RefreshReg$(_c2, \"PaletteExtractForm\");\n$RefreshReg$(_c3, \"DisplayPalette\");","map":{"version":3,"sources":["/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js"],"names":["React","useState","API_URL","ExtractionBlock","numCols","setNumCols","selectedFile","setSelectedFile","undefined","submitForm","console","log","formData","FormData","append","options","method","headers","body","fetch","then","response","json","result","catch","error","PaletteExtractForm","props","i","push","onSubmit","e","target","value","files","DisplayPalette","numOfCols","blocks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n\tconst [numCols, setNumCols] = useState(3)\n\tconst [selectedFile, setSelectedFile] = useState(undefined)\n\n\tconst submitForm = () => {\n\t\tconsole.log('Uploading extract form.');\n\t\tconst formData = new FormData();\n\t\tformData.append('image', selectedFile)\n\t\tformData.append('numOfColors', numCols)\n\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t}\n\t\tdelete options.headers['Content-Type'];\n\n\t\tfetch(API_URL+'/extract', options)\n\t\t.then(response => response.json())\n\t\t.then(result => {\n\t\t\tconsole.log('Success:', result);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"extraction-block\">\n\t\t\t<PaletteExtractForm \n\t\t\t\tonSubmit={submitForm} \n\t\t\t\tnumCols={numCols}\n\t\t\t\tsetNumCols={setNumCols}\n\t\t\t\tselectedFile={selectedFile}\n\t\t\t\tsetSelectedFile={setSelectedFile}\n\t\t\t/>\n\t\t\t<DisplayPalette \n\t\t\t\tnumCols={numCols}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst PaletteExtractForm = (props) => {\n\n\tconst options = [];\n\tfor (let i = 3; i < 11; i++) {\n\t\toptions.push(<option value={i} key={i}>{i}</option>);\n\t}\n\n\treturn (\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<div>Extract a palette from a file.</div>\n\t\t\t<label htmlFor=\"extractNum\">Colors to extract:</label>\n\t\t\t<select \n\t\t\t\tid=\"extractNum\"\n\t\t\t\tvalue={props.numCols}\n\t\t\t\tonChange={(e) => props.setNumCols(e.target.value)}\n\t\t\t>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t\t<input \n\t\t\t\ttype=\"file\" \n\t\t\t\tname=\"image\"\n\t\t\t\tonChange={(e) => props.setSelectedFile(e.target.files[0])}\n\t\t\t/>\n\t\t\t<button>\n\t\t\t\tFind palette!\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nconst DisplayPalette = ({ numOfCols }) => {\n\tconst blocks = [];\n\tfor (let i = 0; i < numOfCols; i++) {\n\t\tblocks.push(<div key={i}>color {i}</div>);\n\t}\n\treturn (\n\t\t<div className=\"display-palette\">\n\t\t\t{\n\t\t\t\tblocks\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default ExtractionBlock;\n"]},"metadata":{},"sourceType":"module"}