{"ast":null,"code":"var _jsxFileName = \"/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n  _s();\n\n  const placeholderColor = \"#DAF7A6\";\n  const defaultColor = {\n    color: placeholderColor,\n    frequency: 0\n  };\n  const [numCols, setNumCols] = useState(3);\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [palette, setPalette] = useState([defaultColor, defaultColor, defaultColor]);\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log('Uploading extract form.');\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    formData.append('numOfColors', numCols);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: formData\n    };\n    delete options.headers['Content-Type'];\n    fetch(API_URL + '/extract', options).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n      setPalette(result);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  const colHandler = num => {\n    // change numCols in addition to palette\n    setNumCols(num);\n    const newPalette = [];\n\n    for (let i = 0; i < num; i++) {\n      newPalette.push(defaultColor);\n    }\n\n    setPalette(newPalette);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"extraction-block\",\n    children: [/*#__PURE__*/_jsxDEV(PaletteExtractForm, {\n      onSubmit: submitForm,\n      numCols: numCols,\n      setNumCols: colHandler,\n      selectedFile: selectedFile,\n      setSelectedFile: setSelectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DisplayPalette, {\n      palette: palette\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExtractionBlock, \"3X1DSSL9ocaA5+k5j57Sj+EjSPo=\");\n\n_c = ExtractionBlock;\n\nconst PaletteExtractForm = props => {\n  const options = [];\n\n  for (let i = 3; i < 11; i++) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: i,\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Extract a palette from a file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"extractNum\",\n      children: \"Colors to extract:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"extractNum\",\n      value: props.numCols,\n      onChange: e => props.setNumCols(e.target.value),\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: e => props.setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Find palette!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = PaletteExtractForm;\n\nconst DisplayPalette = ({\n  palette\n}) => {\n  const blocks = [];\n\n  for (let i = 0; i < palette.length; i++) {\n    blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-block\",\n      style: {\n        backgroundColor: palette[i].color\n      },\n      children: [palette[i].color, \": \", palette[i].frequency]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-palette\",\n    children: blocks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = DisplayPalette;\nexport default ExtractionBlock;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExtractionBlock\");\n$RefreshReg$(_c2, \"PaletteExtractForm\");\n$RefreshReg$(_c3, \"DisplayPalette\");","map":{"version":3,"sources":["/home/severian/personalProjects/goPalettes/frontend/src/components/ExtractionBlock.js"],"names":["React","useState","API_URL","ExtractionBlock","placeholderColor","defaultColor","color","frequency","numCols","setNumCols","selectedFile","setSelectedFile","undefined","palette","setPalette","submitForm","e","preventDefault","console","log","formData","FormData","append","options","method","headers","body","fetch","then","response","json","result","catch","error","colHandler","num","newPalette","i","push","PaletteExtractForm","props","onSubmit","target","value","files","DisplayPalette","blocks","length","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst ExtractionBlock = () => {\n\tconst placeholderColor = \"#DAF7A6\";\n\n\tconst defaultColor = {\n\t\tcolor: placeholderColor,\n\t\tfrequency: 0,\n\t};\n\n\tconst [numCols, setNumCols] = useState(3);\n\tconst [selectedFile, setSelectedFile] = useState(undefined);\n\tconst [palette, setPalette] = useState(\n\t\t[\n\t\t\tdefaultColor, \n\t\t\tdefaultColor, \n\t\t\tdefaultColor, \n\t\t]\n\t);\n\n\tconst submitForm = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('Uploading extract form.');\n\t\tconst formData = new FormData();\n\t\tformData.append('image', selectedFile);\n\t\tformData.append('numOfColors', numCols);\n\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t}\n\t\tdelete options.headers['Content-Type'];\n\n\t\tfetch(API_URL+'/extract', options)\n\t\t.then(response => response.json())\n\t\t.then(result => {\n\t\t\tconsole.log('Success:', result);\n\t\t\tsetPalette(result);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t}\n\n\tconst colHandler = (num) => {\n\t\t// change numCols in addition to palette\n\t\tsetNumCols(num);\n\t\tconst newPalette = [];\n\t\tfor (let i = 0; i < num; i++) {\n\t\t\tnewPalette.push(defaultColor);\n\t\t}\n\t\tsetPalette(newPalette);\n\t}\n\n\treturn (\n\t\t<div className=\"extraction-block\">\n\t\t\t<PaletteExtractForm \n\t\t\t\tonSubmit={submitForm} \n\t\t\t\tnumCols={numCols}\n\t\t\t\tsetNumCols={colHandler}\n\t\t\t\tselectedFile={selectedFile}\n\t\t\t\tsetSelectedFile={setSelectedFile}\n\t\t\t/>\n\t\t\t<DisplayPalette \n\t\t\t\tpalette={palette}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst PaletteExtractForm = (props) => {\n\n\tconst options = [];\n\tfor (let i = 3; i < 11; i++) {\n\t\toptions.push(<option value={i} key={i}>{i}</option>);\n\t}\n\n\treturn (\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<div>Extract a palette from a file.</div>\n\t\t\t<label htmlFor=\"extractNum\">Colors to extract:</label>\n\t\t\t<select \n\t\t\t\tid=\"extractNum\"\n\t\t\t\tvalue={props.numCols}\n\t\t\t\tonChange={(e) => props.setNumCols(e.target.value)}\n\t\t\t>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t\t<input \n\t\t\t\ttype=\"file\" \n\t\t\t\tname=\"image\"\n\t\t\t\tonChange={(e) => props.setSelectedFile(e.target.files[0])}\n\t\t\t/>\n\t\t\t<button>\n\t\t\t\tFind palette!\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nconst DisplayPalette = ({ palette }) => {\n\tconst blocks = [];\n\tfor (let i = 0; i < palette.length; i++) {\n\t\tblocks.push(\n\t\t\t<div \n\t\t\t\tclassName=\"color-block\" \n\t\t\t\tstyle={{backgroundColor: palette[i].color}}\n\t\t\t\tkey={i}\n\t\t\t>\n\t\t\t\t{palette[i].color}: {palette[i].frequency}\n\t\t\t</div>\n\t);\n\t}\n\n\treturn (\n\t\t<div className=\"display-palette\">\n\t\t\t{\n\t\t\t\tblocks\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default ExtractionBlock;\n"]},"metadata":{},"sourceType":"module"}